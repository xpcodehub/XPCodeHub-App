{"version":3,"sources":["components/header/img/ICON_CODEHUB-removebg.png","components/header/img/user-default-image.png","services/_base/base.service.jsx","services/url-finder/url-finder.service.jsx","services/user/user.service.js","services/leaderboard/leaderboard.service.js","services/toast/toast.service.jsx","services/login-xpcodehub/login-xpcodehub.service.jsx","services/skill-tree/skill-tree.service.jsx","services/tech-steps/tech-steps.service.jsx","services/programming-questions/programming-questions.service.jsx","components/header/header.component.jsx","components/label-login/label.component.jsx","screens/login/login.screen.jsx","screens/home/sections/skill-tree.theme.js","screens/home/sections/skill-tree.section.jsx","screens/home/home.screen.jsx","screens/programming-questions/programming-questions.screen.jsx","screens/tech-steps/sections/tech-header/tech-header.section.jsx","screens/tech-steps/tech-steps.screen.jsx","App.js","reportWebVitals.js","index.js"],"names":["mountAuthHeader","headers","localStorage","getItem","BaseService","baseURL","this","client","axios","create","timeout","httpClient","url","a","authorized","config","get","catch","returnToHomeIfNotLogged","result","data","body","post","put","delete","error","response","status","window","location","href","UrlFinder","process","getUrlLogin","getUrlHome","getLastElement","lastElement","split","length","getUrlLogout","getUrlProgrammingTask","getUrlTechSteps","UserService","getStudentInfo","LeaderboardService","getLeaderboard","positionCenter","ToastService","sucesso","frase","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","aviso","warn","erro","info","phrase","LoginXPCodeHub","login","then","value","setItem","accessToken","message","SkillTreeService","getSkillTreeList","getSkillTreeSavedData","getUserInfo","TechStepsService","getTechSteps","idName","updateTechConceptStatus","techConceptStudentId","callback","ProgrammingQuestionsService","getProgrammigQuestions","programmingQuestionId","correctAllProgrammingQuestions","programmingQuestionsId","answersIdChosenByStudent","questionIdAnswerIdMap","Object","fromEntries","correctProgrammingQuestion","answerId","Header","props","leaderboardService","leaderboard","setState","userService","student","redirecionarParaHome","redireciona","urlFinder","renderBoost","boost","className","icon","faFlask","date","finishBoostDate","invertStatusRenderLeaderboard","showLeaderboard","state","Modal","show","onHide","centered","contentClassName","version","id","xmlns","x","y","viewBox","d","map","src","username","alt","points","to","Leaderboard","width","height","logo","onClick","toLowerCase","level","faRankingStar","photo","Component","LabelLogin","texto","maxLength","type","placeholder","name","onChange","onKeyDown","pressionouEnter","LoginScreen","handleChange","event","target","logar","email","password","stateAtual","botaoLogin","loginService","redirect","keyCode","user","theme","border","treeBackgroundColor","heading","font","SkillTreeSection","selectSkill","skillId","Promise","r","setTimeout","savedData","treeId","title","root","filter","skillTreeSavedData","handleNodeSelect","key","HomeScreen","getSkillTreeData","skillTreeService","skillTree","skillTreeData","canvasStyles","pointerEvents","top","left","ProgrammingQuestionsScreen","programmingQuestionsService","programmingQuestions","makeShot","particleRatio","opts","animationInstance","origin","particleCount","Math","floor","fireConfetti","spread","startVelocity","decay","scalar","getInstance","instance","path","updateCurrentQuestionAndSendAnswer","questionId","answer","correct","toastService","explanation","set","ifFinishedCorrectAllAnswersAndGetResult","currentQuestionNumber","size","programmingQuestionList","match","params","programmingQuestionsResult","finishQuiz","correctAnswers","numberOfQuestions","faHouseUser","faListUl","techStepIdName","refConfetti","style","Map","currentQuestion","question","answerOptions","answerOption","TechHeaderSection","techSteps","description","progress","finished","completed","customLabel","motivation","bgColor","TechStepsScreen","getRandomNumberWithHigherProbabilityForLowestNumbers","max","pow","random","getGif","GiphyFetch","search","limit","rating","offset","gif","console","log","renderModalVideoAula","youtubeId","modalVideoAulaId","techStepsService","setRenderCodingTaskModal","codingTaskRepository","renderCodingTaskModal","redirectToProgrammingQuestions","idProgrammingQuestion","getTechConceptIcons","techConcept","techConceptStudent","faPlayCircle","faCheckCircle","faPen","faCode","faSpinner","techConceptList","gitClone","codingTaskModal","githubRepository","aria-labelledby","closeButton","Title","Body","faClone","navigator","clipboard","writeText","Footer","channel","isOpen","videoId","onClose","CodingTaskVerticallyCenteredModal","App","edicoesRotas","modulosRotas","component","exact","render","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","newestOnTop","rtl","pauseOnVisibilityChange","document","getElementById"],"mappings":"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","file":"static/js/main.d145dbdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ICON_CODEHUB-removebg.d2bf3a40.png\";","export default __webpack_public_path__ + \"static/media/user-default-image.a8759827.png\";","import axios from 'axios'\r\n\r\nconst httpClient = baseURL => axios.create({\r\n  timeout: 300000,\r\n  headers: {\r\n    'Content-type': 'application/json'\r\n  },\r\n  baseURL\r\n})\r\n\r\nconst mountAuthHeader = (headers) => ({\r\n  ...headers,\r\n  'Authorization' : `Bearer ${localStorage.getItem('token-xpcodehub-login')}`\r\n})\r\n\r\nexport class BaseService {\r\n  constructor(baseURL) {\r\n    this.client = httpClient(baseURL)\r\n  }\r\n\r\n  async get(url,  { authorized = true, ...config }) {\r\n    if(authorized) {\r\n      config.headers = mountAuthHeader(config.headers)\r\n    }\r\n\r\n     const result = await this.client.get(url, config).catch(this.returnToHomeIfNotLogged)\r\n\r\n    return result.data\r\n  }\r\n\r\n  async post(url, body, { authorized = true, ...config }) {\r\n    if(authorized) {\r\n      config.headers = mountAuthHeader(config.headers)\r\n    }\r\n    const result = await this.client.post(url, body, config).catch(this.returnToHomeIfNotLogged)\r\n\r\n    return result.data\r\n  }\r\n\r\n  async put(url, body,  { authorized = true, ...config }) {\r\n    if(authorized) {\r\n      config.headers = mountAuthHeader(config.headers)\r\n    }\r\n\r\n    const result = await this.client.put(url, body, config).catch(this.returnToHomeIfNotLogged)\r\n\r\n    return result.data\r\n  }\r\n\r\n  async delete(url,  { authorized = true, ...config }) {\r\n    if(authorized) {\r\n      config.headers = mountAuthHeader(config.headers)\r\n    }\r\n    const result = await this.client.delete(url, config).catch(this.returnToHomeIfNotLogged)\r\n\r\n    return result.data\r\n  }\r\n\r\n  returnToHomeIfNotLogged(error) {\r\n    if(error.response.status === 403) {\r\n      window.location.href = '/#/login';\r\n    }\r\n    throw error.response.data\r\n  }\r\n}\r\n","import {BaseService} from \"..\";\r\n\r\nexport class UrlFinder extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n    }\r\n\r\n    getUrlLogin = () => {\r\n        return \"/login\"\r\n    }\r\n\r\n    getUrlHome = () => {\r\n        return \"/\"\r\n    }\r\n\r\n    getLastElement = () => {\r\n        let lastElement = window.location.href.split(\"/\")\r\n        return lastElement[lastElement.length - 1];\r\n    }\r\n\r\n    getUrlLogout = () => {\r\n        return \"/logout\"\r\n    }\r\n\r\n    getUrlProgrammingTask = () => {\r\n        return \"/tech-steps/:techStepIdName/programming-questions/:programmingQuestionsId\";\r\n    }\r\n\r\n    getUrlTechSteps = () => {\r\n        return \"/tech-steps/:idName\";\r\n    }\r\n}\r\n","import {BaseService} from \"..\";\r\n\r\nexport class UserService extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n    }\r\n\r\n    // getEmail = async () => {\r\n    //     if(localStorage.getItem('token-xpcodehub-login') !== null) {\r\n    //         return super.get(`c-monkey/funcionarios/funcionarioLogado`, {\r\n    //             authorized: true\r\n    //         }).catch(error => {\r\n    //             if (error.toString().includes(\"401\")) {\r\n    //                 localStorage.clear()\r\n    //             }\r\n    //         })\r\n    //     } else {\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    getStudentInfo = async () => {\r\n        return super.get(`/student`, {\r\n            authorized: true\r\n        })\r\n    }\r\n}","import {BaseService} from \"..\";\r\n\r\nexport class LeaderboardService extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n    }\r\n    getLeaderboard = async () => {\r\n        return super.get(`/leaderboard`, {\r\n            authorized: true\r\n        })\r\n    }\r\n}","import {toast} from \"react-toastify\";\r\n\r\nconst positionCenter = \"top-center\";\r\nexport class ToastService {\r\n    sucesso = (frase) => {\r\n        toast.success(frase, {\r\n            position: positionCenter,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        });\r\n    }\r\n\r\n    aviso = (frase) => {\r\n        toast.warn(frase, {\r\n            position: positionCenter,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        })\r\n    }\r\n\r\n    erro = (frase) => {\r\n        toast.error(frase, {\r\n            position: positionCenter,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        })\r\n    }\r\n\r\n    info = (phrase) => {\r\n        toast.info(phrase, {\r\n            position: positionCenter,\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import {BaseService, ToastService} from \"..\";\r\n\r\nexport class LoginXPCodeHub extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n\r\n        this.toast = new ToastService()\r\n    }\r\n\r\n    login = async (login) => {\r\n        await super.post(`/login`, login,{\r\n            authorized: false\r\n        }).then((value) =>{\r\n            localStorage.setItem(\"token-xpcodehub-login\", value.accessToken)\r\n        }).catch((erro) => {\r\n            this.toast.erro(`Erro ao logar: ${erro.message}`)\r\n        })\r\n    }\r\n}\r\n","import {BaseService} from \"..\";\r\n\r\n\r\nexport class SkillTreeService extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n\r\n    }\r\n\r\n    getSkillTreeList = async () => {\r\n        return super.get(`/skill-tree`, {\r\n            authorized: true\r\n        })\r\n    }\r\n\r\n    getSkillTreeSavedData = async () => {\r\n        return super.get(`/skill-tree-saved-data`, {\r\n            authorized: true\r\n        })\r\n    }\r\n\r\n    getUserInfo = async () => {\r\n        return super.get(`/student`, {\r\n            authorized: true\r\n        })\r\n    }\r\n}\r\n","import {BaseService} from \"..\";\r\n\r\n\r\nexport class TechStepsService extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n    }\r\n\r\n    getTechSteps = async (idName) => {\r\n        return await super.get(`/tech-steps/${idName}`, {\r\n            authorized: true\r\n        })\r\n    }\r\n\r\n    // @param callback Default value is a noop fn\r\n    updateTechConceptStatus = async (techConceptStudentId, status, callback = () => {}) => {\r\n        return super.put(`/tech-concept/${techConceptStudentId}/status/${status}`, null, {\r\n            authorized: true\r\n        }).then(callback)\r\n    }\r\n}\r\n","import {BaseService} from \"..\";\r\n\r\n\r\nexport class ProgrammingQuestionsService extends BaseService {\r\n    constructor() {\r\n        super(`${process.env.REACT_APP_API_URL}`)\r\n\r\n    }\r\n\r\n    getProgrammigQuestions = async (programmingQuestionId) => {\r\n        return super.get(`/programming-questions/${programmingQuestionId}`, {\r\n            authorized: true\r\n        })\r\n    }\r\n\r\n    correctAllProgrammingQuestions = async (programmingQuestionsId, answersIdChosenByStudent) => {\r\n        return super.post(`/programming-questions/${programmingQuestionsId}/correct`,\r\n            {questionIdAnswerIdMap: Object.fromEntries(answersIdChosenByStudent)}, {authorized: true})\r\n    }\r\n\r\n    correctProgrammingQuestion = async (answersIdChosenByStudent) => {\r\n        return super.post(`/programming-question/correct`,\r\n            {answerId: answersIdChosenByStudent}, {authorized: true})\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport \"./header.style.css\"\r\nimport logo from \"./img/ICON_CODEHUB-removebg.png\"\r\nimport iconUserDefault from \"./img/user-default-image.png\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {LeaderboardService, UrlFinder, UserService} from \"../../services\";\r\nimport {faFlask, faRankingStar} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Countdown from \"react-countdown\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            redireciona: false,\r\n            student: {\r\n                \"level\": \"?\",\r\n                \"points\": \"?\"\r\n            },\r\n            showLeaderboard: false,\r\n            leaderboard: []\r\n        }\r\n\r\n        this.urlFinder = new UrlFinder()\r\n        this.userService = new UserService()\r\n        this.leaderboardService = new LeaderboardService()\r\n\r\n        this.getStudentInfo()\r\n        this.getLeaderboard()\r\n    }\r\n\r\n    getLeaderboard = async () => {\r\n        const leaderboard = await this.leaderboardService.getLeaderboard()\r\n        this.setState({\r\n            leaderboard: leaderboard\r\n        })\r\n    }\r\n\r\n    getStudentInfo = async () => {\r\n        const student = await this.userService.getStudentInfo();\r\n        this.setState({\r\n            student: student\r\n        })\r\n    }\r\n\r\n    redirecionarParaHome = () => {\r\n        this.setState({\r\n            redireciona: this.urlFinder.getUrlHome()\r\n        })\r\n    }\r\n\r\n    renderBoost = (boost) => {\r\n        if (boost) {\r\n            return <div className=\"header-boost-countdown\">\r\n                <FontAwesomeIcon icon={faFlask} className=\"header-boost-icon\"/>\r\n                <Countdown date={boost.finishBoostDate}/>\r\n            </div>\r\n        } else {\r\n            return <div className=\"header-without-boost\">\r\n                <FontAwesomeIcon icon={faFlask} className=\"header-boost-icon\"/>\r\n                <p>Sem Boost</p>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    invertStatusRenderLeaderboard = () => {\r\n        this.setState({\r\n            showLeaderboard: !this.state.showLeaderboard\r\n        })\r\n    }\r\n\r\n    Leaderboard(props) {\r\n        return (\r\n            <Modal className=\"remove-modal-background\"\r\n                   show={props.show}\r\n                   onHide={props.onHide}\r\n                   centered\r\n                   contentClassName=\"modal-teste\"\r\n            >\r\n                <div className=\"leaderboard\">\r\n                    <header>\r\n\r\n                        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                             x=\"0px\" y=\"0px\"\r\n                             viewBox=\"0 0 511.999 511.999\"\r\n                             className=\"leaderboard__icon\">\r\n                            <g>\r\n                                <g>\r\n                                    <path d=\"M466.45,49.374c-7.065-8.308-17.368-13.071-28.267-13.071H402.41v-11.19C402.41,11.266,391.143,0,377.297,0H134.705\r\n\t\t\tc-13.848,0-25.112,11.266-25.112,25.112v11.19H73.816c-10.899,0-21.203,4.764-28.267,13.071\r\n\t\t\tc-6.992,8.221-10.014,19.019-8.289,29.624c9.4,57.8,45.775,108.863,97.4,136.872c4.717,11.341,10.059,22.083,16.008,32.091\r\n\t\t\tc19.002,31.975,42.625,54.073,68.627,64.76c2.635,26.644-15.094,51.885-41.794,57.9c-0.057,0.013-0.097,0.033-0.153,0.046\r\n\t\t\tc-5.211,1.245-9.09,5.921-9.09,11.513v54.363h-21.986c-19.602,0-35.549,15.947-35.549,35.549v28.058\r\n\t\t\tc0,6.545,5.305,11.85,11.85,11.85H390.56c6.545,0,11.85-5.305,11.85-11.85v-28.058c0-19.602-15.947-35.549-35.549-35.549h-21.988\r\n\t\t\tV382.18c0-5.603-3.893-10.286-9.118-11.52c-0.049-0.012-0.096-0.028-0.145-0.04c-26.902-6.055-44.664-31.55-41.752-58.394\r\n\t\t\tc25.548-10.86,48.757-32.761,67.479-64.264c5.949-10.009,11.29-20.752,16.008-32.095c51.622-28.01,87.995-79.072,97.395-136.87\r\n\t\t\tC476.465,68.392,473.443,57.595,466.45,49.374z M60.652,75.192c-0.616-3.787,0.431-7.504,2.949-10.466\r\n\t\t\tc2.555-3.004,6.277-4.726,10.214-4.726h35.777v21.802c0,34.186,4.363,67.3,12.632,97.583\r\n\t\t\tC89.728,153.706,67.354,116.403,60.652,75.192z M366.861,460.243c6.534,0,11.85,5.316,11.85,11.85v16.208H134.422v-16.208\r\n\t\t\tc0-6.534,5.316-11.85,11.85-11.85H366.861z M321.173,394.03v42.513H191.96V394.03H321.173z M223.037,370.331\r\n\t\t\tc2.929-3.224,5.607-6.719,8.002-10.46c7.897-12.339,12.042-26.357,12.228-40.674c4.209,0.573,8.457,0.88,12.741,0.88\r\n\t\t\tc4.661,0,9.279-0.358,13.852-1.036c0.27,19.239,7.758,37.45,20.349,51.289H223.037z M378.709,81.803\r\n\t\t\tc0,58.379-13.406,113.089-37.747,154.049c-23.192,39.03-53.364,60.525-84.956,60.525c-31.597,0-61.771-21.494-84.966-60.523\r\n\t\t\tc-24.342-40.961-37.748-95.671-37.748-154.049V25.112c0-0.78,0.634-1.413,1.412-1.413h242.591c0.78,0,1.414,0.634,1.414,1.413\r\n\t\t\tV81.803z M451.348,75.192c-6.702,41.208-29.074,78.51-61.569,104.191c8.268-30.283,12.631-63.395,12.631-97.58V60.001h35.773\r\n\t\t\tc3.938,0,7.66,1.723,10.214,4.726C450.915,67.688,451.963,71.405,451.348,75.192z\"/>\r\n                                </g>\r\n                            </g>\r\n                            <g>\r\n                                <g>\r\n                                    <path d=\"M327.941,121.658c-1.395-4.288-5.103-7.414-9.566-8.064l-35.758-5.196l-15.991-32.402\r\n\t\t\tc-1.997-4.044-6.116-6.605-10.626-6.605c-4.511,0-8.63,2.561-10.626,6.605l-15.991,32.402l-35.758,5.196\r\n\t\t\tc-4.464,0.648-8.172,3.775-9.566,8.065c-1.393,4.291-0.231,8.999,2.999,12.148l25.875,25.221l-6.109,35.613\r\n\t\t\tc-0.763,4.446,1.064,8.938,4.714,11.59c3.648,2.651,8.487,3,12.479,0.902L256,190.32l31.982,16.813\r\n\t\t\tc1.734,0.911,3.627,1.36,5.512,1.36c2.456,0,4.902-0.763,6.966-2.263c3.65-2.652,5.477-7.144,4.714-11.59l-6.109-35.613\r\n\t\t\tl25.875-25.221C328.172,130.658,329.334,125.949,327.941,121.658z M278.064,146.405c-2.793,2.722-4.068,6.644-3.408,10.489\r\n\t\t\tl3.102,18.09l-16.245-8.541c-1.725-0.908-3.62-1.36-5.514-1.36c-1.894,0-3.788,0.454-5.514,1.36l-16.245,8.541l3.102-18.09\r\n\t\t\tc0.66-3.844-0.615-7.766-3.408-10.489l-13.141-12.81l18.162-2.64c3.859-0.56,7.196-2.985,8.922-6.482l8.123-16.458l8.122,16.458\r\n\t\t\tc1.727,3.497,5.062,5.921,8.922,6.482l18.162,2.64L278.064,146.405z\"/>\r\n                                </g>\r\n                            </g>\r\n                        </svg>\r\n\r\n                        <h1 className=\"leaderboard__title\"><span\r\n                            className=\"leaderboard__title--top\">XPCodeHub</span><span\r\n                            className=\"leaderboard__title--bottom\">Rank dos 5 Melhores</span></h1>\r\n                    </header>\r\n\r\n                    <main className=\"leaderboard__profiles\">\r\n\r\n                        {props.leaderboard.map((leaderboard) => {\r\n                            return (<article className=\"leaderboard__profile\">\r\n                                {/*<img src={`https://fakeface.rest/face/view/${leaderboard.student.username}?minimum_age=18`} alt={leaderboard.student.username}*/}\r\n                                <img src={`https://avatars.dicebear.com/api/avataaars/${leaderboard.student.username}.svg`} alt={leaderboard.student.username}\r\n                                     className=\"leaderboard__picture\"/>\r\n                                <span className=\"leaderboard__name\">{leaderboard.student.username}</span>\r\n                                <span className=\"leaderboard__value\">{leaderboard.points}<span>Pontos</span></span>\r\n                            </article>)\r\n                        })}\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redireciona) {\r\n            return <Redirect to={`../../../../../../../${this.state.redireciona}`}/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <this.Leaderboard\r\n                    show={this.state.showLeaderboard}\r\n                    onHide={() => this.invertStatusRenderLeaderboard()}\r\n                    leaderboard={this.state.leaderboard}\r\n                />\r\n                <div className=\"header\">\r\n                    <img width=\"100px\" height=\"100px\" src={logo} onClick={this.redirecionarParaHome}\r\n                         alt=\"logo\"/>\r\n                    {this.urlFinder.getLastElement().toLowerCase() === \"login\" ? <span/> :\r\n                        <div className=\"header-infos-user\">\r\n                            <p>{this.state.student.points} XP</p>\r\n                            {this.renderBoost(this.state.student.boost)}\r\n                            <p>Lvl {this.state.student.level}</p>\r\n                            <FontAwesomeIcon icon={faRankingStar} className=\"header-leaderboard\"\r\n                                             onClick={() => this.invertStatusRenderLeaderboard()}/>\r\n                        </div>\r\n                    }\r\n                    {this.urlFinder.getLastElement().toLowerCase() !== \"login\" ? <div className=\"header-profile\">\r\n                        <img className=\"header-profile-img\" src={this.state.student.photo == null ? `https://avatars.dicebear.com/api/avataaars/${this.state.student.username}.svg?background=%23f3f4f6` : this.state.student.photo}\r\n                             alt=\"Profile Picture\"/>\r\n                        <p>{this.state.student.username}</p>\r\n                    </div> : null}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./label.style.css\";\r\n\r\nexport class LabelLogin extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input-group\">\r\n                {/*<i class={this.props.classeIcone}/>*/}\r\n                <label>{this.props.texto}</label>\r\n                <input className=\"texto-input\" maxLength=\"60\" type={this.props.type}\r\n                       placeholder={this.props.placeholder} id={this.props.id} name={this.props.name}\r\n                       onChange={this.props.onChange} value={this.props.value}\r\n                       onKeyDown={this.props.pressionouEnter}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./login.style.css\";\r\nimport {Header, LabelLogin} from \"../../components\";\r\nimport {LoginXPCodeHub, ToastService} from \"../../services\";\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nexport class LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            email: '',\r\n            password: '',\r\n            redirect: false,\r\n            botaoLogin: true\r\n        }\r\n\r\n        this.loginService = new LoginXPCodeHub()\r\n        this.toast = new ToastService()\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    logar = async () => {\r\n\r\n        if (this.state.email === \"\") {\r\n            this.toast.erro(\"Fill the Email field to login! ⚠\")\r\n            return;\r\n        }\r\n        if (this.state.password === \"\") {\r\n            this.toast.erro(\"Fill the Password field to login! ⚠\")\r\n            return;\r\n        }\r\n\r\n        let stateAtual = this.state\r\n        stateAtual.botaoLogin = false\r\n        this.setState(stateAtual)\r\n\r\n        await this.loginService.login({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }).then(() => {\r\n            this.setState({\r\n                redirect: \"/\"\r\n            })\r\n        })\r\n    };\r\n\r\n    pressionouEnter = event => {\r\n        if (event.keyCode === 13) {\r\n            this.logar()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect}/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"full-height-grow\">\r\n                    <Header/>\r\n                    <div className=\"container-login full-height-grow\">\r\n                        <section className=\"join-main-section\">\r\n                            <h1 className=\"join-text\">\r\n                                Junte-se a\r\n                                <span className=\"accent-text\"> Diversão.</span>\r\n                            </h1>\r\n                            <form className=\"join-form\">\r\n                                {/*<LabelLogin*/}\r\n                                {/*    texto=\"User:\"*/}\r\n                                {/*    type=\"text\"*/}\r\n                                {/*    id=\"user\"*/}\r\n                                {/*    placeholder=\"xpcodehub\"*/}\r\n                                {/*    // classeIcone=\"fas fa-user\"*/}\r\n                                {/*    name=\"user\"*/}\r\n                                {/*    onChange={this.handleChange}*/}\r\n                                {/*    value={this.state.user}*/}\r\n                                {/*    pressionouEnter={this.pressionouEnter}*/}\r\n                                {/*/>*/}\r\n                                <LabelLogin\r\n                                    texto=\"Email:\"\r\n                                    type=\"email\"\r\n                                    id=\"email\"\r\n                                    placeholder=\"xpcodehub@gmail.com\"\r\n                                    // classeIcone=\"fas fa-user\"\r\n                                    name=\"email\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.email}\r\n                                    pressionouEnter={this.pressionouEnter}\r\n                                />\r\n                                <LabelLogin\r\n                                    texto=\"Password:\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    placeholder=\"*********\"\r\n                                    // classeIcone=\"fas fa-user\"\r\n                                    name=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.password}\r\n                                    pressionouEnter={this.pressionouEnter}\r\n                                />\r\n                                <div className=\"input-group\">\r\n                                    <button type=\"button\" className=\"btn\" onClick={this.logar}>Join Now</button>\r\n                                </div>\r\n                            </form>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <div className=\"join-page-circle-1\"/>\r\n                    <div className=\"join-page-circle-2\"/>\r\n                </div>\r\n            </>\r\n    );\r\n    }\r\n    }\r\n","const theme = {\r\n    //border: \"4px solid rgb(127,127,127)\",\r\n    border: \"none\",\r\n    treeBackgroundColor: \"none\",\r\n    heading: {\r\n        font: \"Homenaje, Impact, sans-serif\"\r\n    },\r\n    // nodeBackgroundColor: \"rgb(60,60,60)\",\r\n    // nodeActiveBackgroundColor: \"#007bff\",\r\n    // nodeHoverBorderColor: \"linear-gradient( to right, #007bff 0%, #007bff 100%)\"\r\n};\r\n\r\nexport default theme;\r\n\r\n// theme options for reference\r\n//   var defaultTheme = {\r\n//     backgroundColor: 'transparent',\r\n//     border: '2px solid white',\r\n//     borderRadius: '4px',\r\n//     primaryFont: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n//     primaryFontColor: 'white',\r\n//     treeBackgroundColor: '#282c34',\r\n//     headingFont: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n//     headingFontColor: 'white',\r\n//     headingFontSize: '24px',\r\n//     headingHoverColor: '#35373b',\r\n//     headingHoverColorTransition: 'background 0.3s ease-out',\r\n//     tooltipBackgroundColor: 'white',\r\n//     tooltipFontColor: '#16181c',\r\n//     tooltipZIndex: 99999,\r\n//     nodeBackgroundColor: '#282c34',\r\n//     nodeBorderColor: 'white',\r\n//     nodeAlternativeFontColor: 'white',\r\n//     nodeAltenativeActiveFontColor: 'white',\r\n//     nodeOverlayColor: 'white',\r\n//     nodeAlternativeActiveBackgroundColor: \"\\n  linear-gradient(\\n    to right,\\n    #b9e562 0%,\\n    #41e2bd 50%,\\n    #c284d8 100%\\n  )\",\r\n//     nodeActiveBackgroundColor: \"linear-gradient(\\n      to right,\\n      #b9e562 0%,\\n      #41e2bd 50%,\\n      #c284d8 100%\\n    )\",\r\n//     nodeHoverBorder: '4px solid',\r\n//     nodeHoverBorderColor: \"linear-gradient(\\n      to right,\\n      #b9e562 0%,\\n      #41e2bd 50%,\\n      #c284d8 100%\\n    )\",\r\n//     nodeIconWidth: '64px',\r\n//     nodeMobileTextNodeHeight: '32px',\r\n//     nodeMobileTextNodeWidth: '108px',\r\n//     nodeMobileFontSize: '14px',\r\n//     nodeDesktopTextNodeHeight: '28px',\r\n//     nodeDesktopTextNodeWidth: '144px',\r\n//     nodeDesktopFontSize: '16px',\r\n//     edgeBorder: '1px solid white'\r\n//   };","import React, { Component } from 'react'\r\nimport './skill-tree.style.css'\r\nimport {\r\n    SkillTreeGroup,\r\n    SkillTree,\r\n    SkillProvider\r\n} from 'beautiful-skill-tree';\r\nimport theme from '../sections/skill-tree.theme.js';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport class SkillTreeSection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redireciona: false,\r\n            savedData: {}\r\n        }\r\n    }\r\n\r\n    selectSkill = async (skillId) => {\r\n        await new Promise(r => setTimeout(r, 200)); // Timer para dar tempo do efeito do click. Faz sentido ter isso? TODO\r\n        this.setState({\r\n            redireciona: `/tech-steps/${skillId}`\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redireciona) {\r\n            return <Redirect to={this.state.redireciona}/>\r\n        }\r\n\r\n            return (\r\n                <>\r\n                    <SkillProvider>\r\n                        <SkillTreeGroup theme={theme}>\r\n                            {() => {\r\n                                return (\r\n                                    <SkillTree treeId={this.props.data.id}\r\n                                               title={this.props.data.title}\r\n                                               data={this.props.data.root}\r\n                                               savedData={this.props.savedData\r\n                                                   .filter((savedData) => savedData.treeId === this.props.data.id)[0]?.skillTreeSavedData ?? {}}\r\n                                               handleNodeSelect={(event) => this.selectSkill(event.key)}\r\n                                    />\r\n                                )\r\n                            }}\r\n                        </SkillTreeGroup>\r\n                    </SkillProvider>\r\n                </>\r\n            )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./home.style.css\"\r\nimport {Header} from \"../../components\";\r\nimport {SkillTreeSection} from \"./sections/skill-tree.section\"\r\nimport {SkillTreeService} from \"../../services\";\r\n\r\n\r\nexport class HomeScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            skillTreeData: false,\r\n            savedData: false,\r\n            user: {}\r\n        }\r\n\r\n        this.skillTreeService = new SkillTreeService()\r\n        this.getSkillTreeData()\r\n        this.getSkillTreeSavedData()\r\n    }\r\n\r\n    getSkillTreeData = async () => {\r\n        const skillTree =  await this.skillTreeService.getSkillTreeList();\r\n        this.setState({\r\n            skillTreeData: skillTree\r\n        })\r\n    };\r\n\r\n    getSkillTreeSavedData = async (treeId) => {\r\n        const savedData =  await this.skillTreeService.getSkillTreeSavedData();\r\n        this.setState({\r\n            savedData: savedData\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"home\">\r\n                    <Header/>\r\n                    <div className=\"skill-trees-container\">\r\n                        {this.state.skillTreeData && this.state.savedData ? this.state.skillTreeData.map((skillTree) => {\r\n                            return <SkillTreeSection data={skillTree} savedData={this.state.savedData}/>\r\n                        }) : null}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./programming-questions.style.css\"\r\nimport {Header} from \"../../components\";\r\nimport {ProgrammingQuestionsService, ToastService} from \"../../services\";\r\nimport ReactCanvasConfetti from \"react-canvas-confetti\";\r\nimport {faHouseUser, faListUl} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst canvasStyles = {\r\n    position: \"fixed\",\r\n    pointerEvents: \"none\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    top: 0,\r\n    left: 0\r\n};\r\n\r\nexport class ProgrammingQuestionsScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            programmingQuestions: {programmingQuestionList:[]},\r\n            currentQuestionNumber: 0,\r\n            answersIdChosenByStudent: new Map(),\r\n            programmingQuestionsResult: false,\r\n            redireciona: false\r\n        }\r\n\r\n        this.animationInstance = null;\r\n        this.programmingQuestionsService = new ProgrammingQuestionsService()\r\n        this.toastService = new ToastService()\r\n\r\n        this.getProgrammigQuestions(this.props.match.params.programmingQuestionsId)\r\n    }\r\n\r\n    getProgrammigQuestions = async (programmingQuestionId) => {\r\n        const programmingQuestions = await this.programmingQuestionsService.getProgrammigQuestions(programmingQuestionId);\r\n        this.setState({\r\n            programmingQuestions: programmingQuestions\r\n        })\r\n    };\r\n\r\n    makeShot = (particleRatio, opts) => {\r\n        this.animationInstance &&\r\n        this.animationInstance({\r\n            ...opts,\r\n            origin: { y: 0.7, x: 0.2 },\r\n            particleCount: Math.floor(300 * particleRatio)\r\n        }) &&\r\n        this.animationInstance({\r\n            ...opts,\r\n            origin: { y: 0.7, x: 0.9 },\r\n            particleCount: Math.floor(300 * particleRatio)\r\n        }) && this.animationInstance({\r\n            ...opts,\r\n            origin: { y: 0.7 },\r\n            particleCount: Math.floor(400 * particleRatio)\r\n        });\r\n    };\r\n\r\n    fireConfetti = () => {\r\n        this.makeShot(0.25, {\r\n            spread: 26,\r\n            startVelocity: 55\r\n        });\r\n\r\n        this.makeShot(0.2, {\r\n            spread: 60\r\n        });\r\n\r\n        this.makeShot(0.35, {\r\n            spread: 100,\r\n            decay: 0.91,\r\n            scalar: 0.8\r\n        });\r\n\r\n        this.makeShot(0.1, {\r\n            spread: 120,\r\n            startVelocity: 25,\r\n            decay: 0.92,\r\n            scalar: 1.2\r\n        });\r\n\r\n        this.makeShot(0.1, {\r\n            spread: 120,\r\n            startVelocity: 45\r\n        });\r\n    };\r\n\r\n    getInstance = (instance) => {\r\n        this.animationInstance = instance;\r\n    };\r\n\r\n    redirect = (path) => {\r\n\r\n        this.setState({\r\n            redireciona: path\r\n        })\r\n    }\r\n\r\n    updateCurrentQuestionAndSendAnswer = async (questionId, answerId) => {\r\n        const answer = await this.programmingQuestionsService.correctProgrammingQuestion(answerId)\r\n        if(answer.correct) {\r\n            this.toastService.sucesso(\"✅ \" + answer.explanation)\r\n        } else {\r\n            this.toastService.aviso(\"❌ \" + answer.explanation)\r\n        }\r\n\r\n        this.state.answersIdChosenByStudent.set(questionId, answerId)\r\n        await this.ifFinishedCorrectAllAnswersAndGetResult()\r\n\r\n        this.setState({\r\n            currentQuestionNumber: this.state.currentQuestionNumber + 1,\r\n        })\r\n    };\r\n\r\n    ifFinishedCorrectAllAnswersAndGetResult = async () => {\r\n        if(this.state.answersIdChosenByStudent.size === this.state.programmingQuestions.programmingQuestionList.length) {\r\n            const programmingQuestionsResult = await this.programmingQuestionsService.correctAllProgrammingQuestions(this.props.match.params.programmingQuestionsId, this.state.answersIdChosenByStudent)\r\n            this.setState({\r\n                programmingQuestionsResult: programmingQuestionsResult\r\n            })\r\n        }\r\n    }\r\n\r\n    finishQuiz = () => {\r\n        if(this.state.programmingQuestionsResult.correctAnswers === this.state.programmingQuestionsResult.numberOfQuestions) {\r\n            this.fireConfetti()\r\n        }\r\n        return (\r\n            <div className='score-section'>\r\n                Você acertou {this.state.programmingQuestionsResult.correctAnswers} de {this.state.programmingQuestionsResult.numberOfQuestions}. Ou seja,\r\n                {this.state.programmingQuestionsResult.correctAnswers/this.state.programmingQuestionsResult.numberOfQuestions >= 0.6 ? \"mais que 60%, você passou!\" : \"menos de 60%, tente novamente.\"}\r\n                <div className='score-section-buttons'>\r\n                    <FontAwesomeIcon icon={faHouseUser} className=\"icons-score-section\" onClick={() => this.redirect(`/`)}/>\r\n                    <FontAwesomeIcon icon={faListUl} className=\"icons-score-section\" onClick={() => this.redirect(`/tech-steps/${this.props.match.params.techStepIdName}`)}/>\r\n                </div>\r\n                <ReactCanvasConfetti\r\n                    refConfetti={this.getInstance}\r\n                    style={canvasStyles}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redireciona) {\r\n            return <Redirect to={this.state.redireciona}/>\r\n        }\r\n\r\n        const currentQuestion = this.state.programmingQuestions.programmingQuestionList[this.state.currentQuestionNumber]\r\n        return (\r\n            <>\r\n                <div className=\"programming-questions-container\">\r\n                    <Header/>\r\n                    <div className=\"programming-questions\">\r\n                        <div className='app'>\r\n                            {this.state.programmingQuestions.programmingQuestionList.length === 0 ? null :\r\n                                (\r\n                                this.state.programmingQuestionsResult ? this.finishQuiz()  :\r\n                                    (\r\n                                    <>\r\n                                        <div className='question-section'>\r\n                                            <div className='question-count'>\r\n                                                <span>Questão {this.state.currentQuestionNumber + 1}</span>/{this.state.programmingQuestions.programmingQuestionList.length}\r\n                                            </div>\r\n                                            <div className='question-text'>{currentQuestion.question}</div>\r\n                                        </div>\r\n                                        <div className='answer-section'>\r\n                                            {currentQuestion.answerOptions.map((answerOption) => (\r\n                                                <button onClick={() => this.updateCurrentQuestionAndSendAnswer(currentQuestion.id, answerOption.id)}>\r\n                                                    {answerOption.answer}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    </>\r\n                                ))}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"programming-questions-circle-2\"/>\r\n                    <div className=\"programming-questions-circle-3\"/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport './tech-header.style.css'\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\nexport class TechHeaderSection extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"formacao-header formacao__background-color--front-end\">\r\n                    <div className=\"container-tech-steps\">\r\n                        <div className=\"formacao-header-headline\">\r\n                            <h1 className=\"formacao-headline-titulo\">{this.props.techSteps.name}</h1>\r\n                            <h2 className=\"formacao-headline-subtitulo\">{this.props.techSteps.description}</h2>\r\n                        </div>\r\n                        <div className=\"formacao-header-icon--degree\"/>\r\n                    </div>\r\n\r\n                    <div className=\"formacao-dados container-tech-steps\">\r\n                        <div className=\"formacao-header-dados\">\r\n                            <div\r\n                                className=\"formacao-dados-finalizado formacao__text-color--front-end formacao__after-aux-border-color--front-end\">\r\n                                <div className=\"formacao-finalizado-cursos\">\r\n                                    <div className=\"guide-card__progress-bar guide-card__progress-bar__formacao\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"formacao-finalizado-texto\">\r\n                                <span className=\"formacao-finalizado-fracao\">\r\n                                    <span className=\"formacao-finalizado-fracao__completed\">\r\n                                        {this.props.techSteps.progress ? this.props.techSteps.progress.finished : 0}</span>/{this.props.techSteps.progress ? this.props.techSteps.progress.size : 0}\r\n                                </span>\r\n                                    <span className=\"formacao-finalizado-label\"> Cursos finalizados</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"formacao_user-follow-certificate\">\r\n                                <ProgressBar completed={this.props.techSteps.progress ? ((this.props.techSteps.progress.finished/this.props.techSteps.progress.size) * 100) : 0}\r\n                                             customLabel={this.props.techSteps.progress ? this.props.techSteps.progress.motivation : null} // TODO fazer no backend\r\n                                             bgColor={\"rgb(28,113,219)\"}/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Header} from \"../../components\";\r\nimport './tech-steps.style.css'\r\nimport 'react-modal-video/css/modal-video.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCheckCircle, faClone, faCode, faPen, faPlayCircle, faSpinner} from '@fortawesome/free-solid-svg-icons'\r\nimport ModalVideo from 'react-modal-video'\r\nimport {TechHeaderSection} from \"./sections/tech-header/tech-header.section\";\r\nimport {TechStepsService, ToastService} from \"../../services\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport {Gif} from '@giphy/react-components'\r\nimport {GiphyFetch} from '@giphy/js-fetch-api'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport class TechStepsScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalVideoAulaId: false,\r\n            techSteps: {techConceptList:[]},\r\n            renderCodingTaskModal: false,\r\n            gif: false,\r\n            redireciona: false\r\n        }\r\n\r\n        this.techStepsService = new TechStepsService();\r\n        this.toast = new ToastService();\r\n        console.log(this.props)\r\n        this.getTechSteps(this.props.match.params.idName);\r\n        this.getGif()\r\n    }\r\n\r\n    getRandomNumberWithHigherProbabilityForLowestNumbers = (max) => {\r\n        return Math.floor(Math.pow(Math.random(), 2) * max);\r\n    }\r\n\r\n    getGif = async () => {\r\n        const gif = await new GiphyFetch('MCUPVryg2ydH59s7daR3AgbYAOKczUSN').search('computer', //TODO add in a local secret and create production SDK\r\n            {type: 'gifs', limit: 1, rating: 'g', offset: this.getRandomNumberWithHigherProbabilityForLowestNumbers(100)})\r\n        console.log(gif)\r\n        this.setState({\r\n            gif: gif.data[0]\r\n        })\r\n    }\r\n\r\n    renderModalVideoAula = (youtubeId) => {\r\n        console.log(youtubeId)\r\n        this.setState({\r\n            modalVideoAulaId: youtubeId\r\n        })\r\n    }\r\n\r\n    getTechSteps = async (idName) => {\r\n        const techSteps = await this.techStepsService.getTechSteps(idName);\r\n        this.setState({\r\n            techSteps: techSteps\r\n        })\r\n    }\r\n\r\n    setRenderCodingTaskModal = (codingTaskRepository) => {\r\n        console.log(\"tão me chamandoo\")\r\n        this.setState({\r\n            renderCodingTaskModal: codingTaskRepository\r\n        })\r\n    }\r\n\r\n    redirectToProgrammingQuestions = (idProgrammingQuestion) => {\r\n        this.setState({\r\n            redireciona: `/tech-steps/${this.props.match.params.idName}/programming-questions/${idProgrammingQuestion}`\r\n        })\r\n    }\r\n\r\n    getTechConceptIcons = (techConcept) => {\r\n        techConcept.show = true;\r\n        console.log(techConcept.techConceptStudent.status)\r\n        console.log(techConcept.techConceptStudent.status === \"PROCESSING\" )\r\n        switch (techConcept.type) {\r\n            case \"VIDEO_LEARNING\":\r\n                return <>\r\n                    <FontAwesomeIcon icon={faPlayCircle} className=\"icon-play-clickable\" size=\"2x\"\r\n                                     onClick={() => this.renderModalVideoAula(techConcept.youtubeId)}/>\r\n                    <FontAwesomeIcon icon={faCheckCircle}\r\n                                     className={`icon-check-clickable icon-check-${techConcept.techConceptStudent.status}`}\r\n                                     size=\"2x\"\r\n                                     onClick={() => this.techStepsService.updateTechConceptStatus(techConcept.techConceptStudent.id, techConcept.techConceptStudent.status === \"SUCCESS\" ? \"NOT_STARTED\" : \"SUCCESS\", () => this.getTechSteps(this.props.match.params.idName))}/>\r\n                </>\r\n            case \"PROGRAMING_QUESTION\":\r\n                return <>\r\n                    <FontAwesomeIcon icon={faPen} className=\"icon-quiz-clickable\"\r\n                                     size=\"2x\" onClick={() => this.redirectToProgrammingQuestions(techConcept.id)}/>\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={`icon-check icon-check-${techConcept.techConceptStudent.status}`} size=\"2x\"/>\r\n                </>\r\n            case \"CODING_TASK\":\r\n                return <>\r\n                    <FontAwesomeIcon icon={faCode} className=\"icon-code-clickable\"\r\n                                     onClick={() => this.setRenderCodingTaskModal(techConcept)} size=\"2x\"/>\r\n                    <FontAwesomeIcon icon={techConcept.techConceptStudent.status === \"PROCESSING\" ? faSpinner : faCheckCircle} className={`icon-check icon-check-${techConcept.techConceptStudent.status}`} size=\"2x\"/>\r\n                </>\r\n            default:\r\n                return <></>\r\n        }\r\n    }\r\n\r\n\r\n\r\n    CodingTaskVerticallyCenteredModal(props) {\r\n        const gitClone = `git clone ${props.codingTaskModal.githubRepository}`\r\n        return (\r\n            <Modal\r\n                show={props.codingTaskModal.show}\r\n                onHide={props.onHide}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"coding-task-modal\">\r\n                        {props.codingTaskModal.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"coding-task-modal-centralize\">\r\n                    <p className=\"coding-task-modal\">\r\n                        É hora da prática, vamos codificar! Clone o repositório abaixo e faça os exercícios conforme explicado no módulo de Introdução ao XPCodeHub. Divirta-se com o código 🤖😁‍!\r\n                    </p>\r\n                    <br/>\r\n                    <div className=\"coding-task-modal-code-centralize\">\r\n                        <code className=\"coding-task-modal-code-tag\">\r\n                            {gitClone}\r\n                        </code>\r\n                        <FontAwesomeIcon icon={faClone} className=\"icon-clone\" size=\"lg\"\r\n                                         onClick={() => navigator.clipboard.writeText(gitClone)\r\n                                             .then(() => props.toast.info(\"Git clone copiado.\"))}/>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"coding-task-modal-code-centralize\">\r\n                    {props.gif ? <Gif gif={props.gif} height={300}  width={500}/> : null}\r\n                    <small className=\"coding-task-modal\"> PS: Isso é um <b>gif aleatório</b> sobre computação</small>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redireciona) {\r\n            return <Redirect to={this.state.redireciona}/>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ModalVideo channel='youtube' isOpen={this.state.modalVideoAulaId} videoId={this.state.modalVideoAulaId}\r\n                            onClose={() => this.setState({modalVideoAulaId: false})}/>\r\n\r\n                <this.CodingTaskVerticallyCenteredModal\r\n                    codingTaskModal={this.state.renderCodingTaskModal}\r\n                    onHide={() => this.setRenderCodingTaskModal(false)}\r\n                    toast={this.toast}\r\n                    gif={this.state.gif}\r\n                />\r\n\r\n                <div className=\"tech-steps\">\r\n                    <Header/>\r\n                    <TechHeaderSection techSteps={this.state.techSteps}/>\r\n\r\n                    <div className=\"tech-body\">\r\n                        <div className=\"tech-concepts\">\r\n                            {this.state.techSteps.techConceptList.map((techConcept) => {\r\n                                return <>\r\n                                    <div className=\"specific-concept\">\r\n                                        <h3>{techConcept.name}</h3>\r\n                                        <div className=\"icons-specific-concept\">\r\n                                            {this.getTechConceptIcons(techConcept)}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tech-page-circle-2\"/>\r\n                    <div className=\"tech-page-circle-3\"/>\r\n                    <div className=\"tech-page-circle-1\"/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import {Switch, Route, Redirect} from \"react-router-dom\"\r\nimport React, {Component} from 'react';\r\nimport {LoginScreen, HomeScreen, ProgrammingQuestionsScreen, TechStepsScreen} from \"./screens\";\r\nimport './App.css';\r\nimport {UrlFinder} from \"./services\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            edicoesRotas: false,\r\n            modulosRotas: false\r\n        }\r\n\r\n        this.urlFinder = new UrlFinder()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" component={HomeScreen} exact/>\r\n                <Route path={this.urlFinder.getUrlProgrammingTask()} component={ProgrammingQuestionsScreen} exact/>\r\n                <Route path={this.urlFinder.getUrlTechSteps()} component={TechStepsScreen} exact/>\r\n                <Route path={this.urlFinder.getUrlLogin()} component={LoginScreen} exact/>\r\n                <Route path={this.urlFinder.getUrlLogout()} exact render={() => {\r\n                    localStorage.clear()\r\n                    return <Redirect to='/Login'/>\r\n                }\r\n                }/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(<HashRouter><App/>\r\n    <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnVisibilityChange\r\n        draggable\r\n        pauseOnHover/>\r\n</HashRouter>, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}